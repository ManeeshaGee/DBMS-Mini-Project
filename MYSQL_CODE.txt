Create table student

mysql>  CREATE TABLE STUDENT(
    ->      reg_no CHAR(6),
    ->      fname VARCHAR(50),
    ->      lname VARCHAR(50),
    ->      address VARCHAR(100),
    ->      dob DATE,
    ->      email VARCHAR(100),
    ->      status VARCHAR(50),
    ->      phone_no VARCHAR(50),
    ->      dep_name CHAR(3),
    -> PRIMARY KEY(reg_no)
    ->      );
Query OK, 0 rows affected (0.04 sec)

***************************************************************************************************************************

Create table course_unit

mysql>   CREATE TABLE COURSE_UNIT
    ->      (
    ->      course_code CHAR(7),
    ->      course_name VARCHAR(50),
    ->      type VARCHAR(50),
    ->      credits INTEGER,
    ->      lecturer_incharge VARCHAR(100),
    ->      lecture_hours INTEGER,
    ->      PRIMARY KEY(course_code)
    ->      );
Query OK, 0 rows affected (0.02 sec)


***************************************************************************************************************************

Create table attendance

mysql> CREATE TABLE ATTENDANCE
    ->  (
    -> attendance_id INT AUTO_INCREMENT,
    -> reg_no CHAR(6),
    -> course_code CHAR(7),
    -> lecture_time_per_session INT,
    -> date DATE,
    -> status varchar(20),
    -> Week INT,
    -> type VARCHAR(25),
    -> PRIMARY KEY(attendance_id),
    -> FOREIGN KEY(reg_no) REFERENCES student(reg_no),
    -> FOREIGN KEY(course_code) REFERENCES course_unit(course_code)
    -> );
Query OK, 0 rows affected (0.04 sec)


***************************************************************************************************************************

Create table CA_MARKS

mysql> CREATE TABLE CA_MARKS
    -> (
    -> ca_id INT,
    -> reg_no CHAR(6),
    -> course_code CHAR(7),
    -> quiz_01 DECIMAL(3,2),
    -> quiz_02 DECIMAL(3,2),
    -> quiz_03 DECIMAL(3,2),
    -> mid_exam DECIMAL(3,2),
    -> PRIMARY KEY(ca_id),
    -> FOREIGN KEY(reg_no) REFERENCES student(reg_no),
    -> FOREIGN KEY(course_code) REFERENCES course_unit(course_code)
    -> );
Query OK, 0 rows affected (0.04 sec)


***************************************************************************************************************************

Create table quiz_marks

mysql> CREATE TABLE quiz_marks
    -> (
    -> quiz_id INT AUTO_INCREMENT,
    -> reg_no CHAR(6),
    -> course_code CHAR(7),
    -> quiz_01 DECIMAL(3,2),
    -> quiz_02 DECIMAL(3,2),
    -> quiz_03 DECIMAL(3,2),
    -> quiz_04 DECIMAL(3,2),
    -> PRIMARY KEY(quiz_id),
    -> FOREIGN KEY(reg_no) REFERENCES student(reg_no),
    -> FOREIGN KEY(course_code) REFERENCES course_unit(course_code)
    -> );
Query OK, 0 rows affected (0.04 sec)


***************************************************************************************************************************

Create table Assessment_marks

mysql> CREATE TABLE ASSESSMENT_MARKS
    -> (
    -> assessment_id INT,
    -> reg_no CHAR(6),
    -> course_code CHAR(7),
    -> assessment_name VARCHAR(50),
    -> assessment_marks DECIMAL(3,2),
    -> PRIMARY KEY(assessment_id),
    -> FOREIGN KEY(reg_no) REFERENCES student(reg_no),
    -> FOREIGN KEY(course_code) REFERENCES course_unit(course_code)
    -> );
Query OK, 0 rows affected (0.04 sec)


***************************************************************************************************************************

Create table mid_marks

mysql> CREATE TABLE mid_marks
    ->      (
    ->      id INT AUTO_INCREMENT,
    ->      reg_no CHAR(6),
    ->      course_code CHAR(7),
    ->      Practical DECIMAL(6,2),
    ->      Theory DECIMAL(6,2),
    ->      PRIMARY KEY(id),
    ->      FOREIGN KEY(reg_no) REFERENCES student(reg_no),
    ->      FOREIGN KEY(course_code) REFERENCES course_unit(course_code)
    ->      );
Query OK, 0 rows affected (0.04 sec)


***************************************************************************************************************************

Create table final_marks

mysql> CREATE TABLE final_marks
    -> (
    -> id INT,
    -> reg_no CHAR(6),
    -> course_code CHAR(7),
    -> theory DECIMAL(3,2),
    -> practical DECIMAL(3,2),
    -> PRIMARY KEY(id),
    -> FOREIGN KEY(reg_no) REFERENCES student(reg_no),
    -> FOREIGN KEY(course_code) REFERENCES course_unit(course_code)
    -> );
Query OK, 0 rows affected (0.02 sec)


***************************************************************************************************************************

Create table staff

mysql> CREATE TABLE STAFF
    -> (
    -> staff_id INT,
    -> fname VARCHAR(50),
    -> lname VARCHAR(50),
    -> designation VARCHAR(100),
    -> dep_name VARCHAR(3),
    -> email VARCHAR(100),
    -> start_work_date DATE,
    -> phone_no VARCHAR(50),
    -> PRIMARY KEY(staff_id)
    -> );
Query OK, 0 rows affected (0.02 sec)


***************************************************************************************************************************

Add data for student table

mysql> INSERT INTO student
    -> VALUES
    -> ('TG1010', 'Nisal', 'Kumara', 'Galle', '2001-05-12', 'nisal@gmail.com', 'Proper', '077-1178252', 'ICT'),
    -> ('TG1011', 'Daham', 'Rathnayaka', 'Matara','2001-02-01','daham@gmail.com', 'Proper', '075-3032102', 'ICT'),
    -> ('TG1012', 'Kumara', 'Rathnapala','Anuradhapura', '2001-06-03', 'kumara@gmail.com', 'Proper', '071-4589522', 'ICT'),
    -> ('TG1013', 'Tharindu', 'Theekshana','Colombo', '2001-06-15', 'tharindu@gmail.com', 'Proper', '071-4588822', 'ET'),
    -> ('TG1014', 'Pasindu', 'Naveen','Homagama', '2001-06-13', 'pasindu@gmail.com', 'Proper', '078-4589522', 'BST'),
    -> ('TG1015', 'Nimali', 'Hansani','Anuradhapura', '2001-04-03', 'nimali@gmail.com', 'Proper', '072-4589522', 'ICT'),

    -> ('TG1016', 'Tharushi', 'Kumari','Matara', '2001-06-23', 'tharushi@gmail.com', 'Proper', '071-2229522', 'ET'),
    -> ('TG1017', 'Dilshan', 'Samarasinghe','Anuradhapura', '2001-08-03', 'dilshan@gmail.com', 'Proper', '071-4589511', 'BST'),
    -> ('TG1018', 'Piyumi', 'Botheju', 'Colombo', '2000-02-02', 'piyumi@gmail.com', 'Proper', '071-4999522', 'ICT'),
    -> ('TG1019', 'Thisuri', 'Heshari','Kandy', '2001-09-03', 'thisuri@gmail.com', 'Proper', '071-4969522', 'ET');
Query OK, 10 rows affected (0.01 sec)
Records: 10  Duplicates: 0  Warnings: 0

mysql> INSERT INTO student
    -> VALUES
    -> ('TG701', 'Keshara', 'Hashan','Kurunegala', '1998-05-08', 'keshara@gmail.com', 'Repeat', '071-4969444', 'ET'),
    -> ('TG702', 'Deshan', 'Perera','Kandy', '1998-09-03', 'deshan@gmail.com', 'Repeat', '071-7895623', 'ICT'),
    -> ('TG703', 'Tharindu', 'Prabashwara','Ampara', '1998-10-03', 'tharindu1@gmail.com', 'Repeat', '071-7895583', 'BST'),
    -> ('TG704', 'Kumari', 'Alponsu','Kandy', '1998-02-17', 'kumari@gmail.com', 'Repeat', '071-6695623', 'ICT'),
    -> ('TG705', 'Dayana', 'Gamage','Colombo', '1998-09-25', 'dayana@gmail.com', 'Repeat', '070-7895623', 'ET');
Query OK, 5 rows affected (0.00 sec)
Records: 5  Duplicates: 0  Warnings: 0


***************************************************************************************************************************

Add data for course_unit

mysql> INSERT INTO course_unit
    -> VALUES
    -> ('ENG1222', 'EnglishII', 'Theory', 2, 'Mrs.Hiranya Amarasinghe', 30),
    -> ('ICT1212', 'Database Management System', 'Theory', 2, 'Mr.Nuwan Laksiri', 30),
    -> ('ICT1222', 'Database Management Systems Practicum', 'Practical', 2, 'Mr.Nuwan Laksiri', 30),
    -> ('ICT1233', 'Server-Side Web Development', 'Theory', 3, 'Mrs.Rumeshika W.Aracchi', 30),
    -> ('ICT1242', 'Computer Architecture', 'Theory', 2, 'Mrs.Nimesha Manage', 30),
    -> ('ICT1253', 'Computer Networks', 'Theory', 3, 'Mrs.Chanduni Gamage', 30),
    -> ('TCS1212', 'Fundamentals of Management', 'Theory', 2, 'Mrs.Nilanthi Adikaram', 30),
    -> ('TMS1233', 'Discrete Mathematics', 'Theory', 3, 'Mr.Harshana Seneviratne', 45);
Query OK, 8 rows affected (0.01 sec)
Records: 8  Duplicates: 0  Warnings: 0


***************************************************************************************************************************

add data quiz_marks

mysql> INSERT INTO quiz_marks(reg_no, course_code, quiz_01, quiz_02, quiz_03, quiz_04)
    -> VALUES
    -> ('TG1010', 'ICT1212', 8.5, 6.5, 7.0, 8.0),
    -> ('TG1011', 'ICT1222', 5.5, 7.5, 6.5, 9.0),
    -> ('TG1012', 'ICT1212', 6.5, 7.5, 7.0, 6.0),
    -> ('TG1010', 'ICT1222', 8.5, 6.0, 7.0, 8.0),
    -> ('TG1010', 'ICT1253', 6.5, 7.5, 7.5, 8.0);
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0


***************************************************************************************************************************

Add data mid_marks

mysql> INSERT INTO mid_marks(reg_no, course_code, Practical, Theory)
    -> VALUES
    -> ('TG1010', 'ICT1212', NULL, 80.5),
    -> ('TG1010', 'ICT1222', 50.5, NULL),
    -> ('TG1011', 'ICT1212', NULL, 70.0),
    -> ('TG1012', 'ICT1242', NULL, 60.0),
    -> ('TG1011', 'ICT1222', 65.5, NULL);
Query OK, 5 rows affected (0.00 sec)
Records: 5  Duplicates: 0  Warnings: 0
 
Quiz marks TABLE structure

CREATE TABLE quiz_marks (
    quiz_id INT PRIMARY KEY,
    reg_no CHAR(6),
    course_code CHAR(7),
    quiz_number INT,   
    quiz_score DECIMAL(3,2),
    FOREIGN KEY (course_code) REFERENCES course_unit(course_code)
);


 

CREATE VIEW tot_quiz_marks AS
SELECT
    reg_no,
    course_code,
    CAST(
        CASE
            WHEN COUNT(*) = 3 THEN (SUM(quiz_score) - MIN(quiz_score)) / 2
            WHEN COUNT(*) = 4 THEN (SUM(quiz_score) - MIN(quiz_score)) / 2
            ELSE SUM(quiz_score) / 2
        END AS DECIMAL(3, 2)
    ) AS total_quiz_marks
FROM quiz_marks
GROUP BY reg_no, course_code;

Insert data for QUIZ marks TABLE

INSERT INTO quiz_marks (quiz_id, reg_no, course_code, quiz_number, quiz_score)
VALUES
(1, 'TG1010', 'ENG1222', 1, 9.5),
(2, 'TG1010', 'ENG1222', 2, 9.0),
(3, 'TG1010', 'ICT1212', 1, 8.0),
(4, 'TG1010', 'ICT1212', 2, 8.5),
(5, 'TG1010', 'ICT1212', 3, 9.0),
(6, 'TG1010', 'ICT1233', 1, 9.5),
(7, 'TG1010', 'ICT1233', 2, 8.5),
(8, 'TG1010', 'ICT1233', 3, 9.0),
(9, 'TG1010', 'ICT1242', 1, 8.5),
(10, 'TG1010', 'ICT1242', 2, 9.0),
(11, 'TG1010', 'ICT1242', 3, 7.5),
(12, 'TG1010', 'ICT1253', 1, 9.0),
(13, 'TG1010', 'ICT1253', 2, 8.0),
(14, 'TG1010', 'ICT1253', 3, 8.5),
(15, 'TG1010', 'TCS1212', 1, 8.0),
(16, 'TG1010', 'TCS1212', 2, 9.0),
(17, 'TG1010', 'TMS1233', 1, 9.5),
(18, 'TG1010', 'TMS1233', 2, 8.0);
(19, 'TG1010', 'ICT1222', 1, NULL); --for this course does not have any quiz but COALESCE represent null value as 0
Insert data for MID marks TABLE

INSERT INTO mid_marks (reg_no, course_code, Practical, Theory)
VALUES 
('TG1010', 'ICT1212', NULL, 15.5),
('TG1010', 'ENG1222', NULL, 20.0),
('TG1010', 'ICT1222', NULL, 15.5),
('TG1010', 'ICT1233', 8.5, NULL),
('TG1010', 'ICT1242', NULL, 18.0),
('TG1010', 'TCS1212', NULL, 15.5),
('TG1010', 'TMS1233', NULL, 21.5);

Assessment marks TABLE structure

CREATE TABLE ASSESSMENT_MARKS
     (
     assessment_id INT AUTO_INCREMENT,
     reg_no CHAR(6),
     course_code CHAR(7),
    assessment_name VARCHAR(50),
     assessment_marks DECIMAL(4,2),
     PRIMARY KEY(assessment_id),
     FOREIGN KEY(reg_no) REFERENCES student(reg_no),
     FOREIGN KEY(course_code) REFERENCES course_unit(course_code)
     );

Insert data for Assessment marks TABLE

INSERT INTO assessment_marks(reg_no, course_code, assessment_name, assessment_marks)
VALUES
('TG1010', 'ICT1222', 'DBMS Mini Project', 15.0),
('TG1010', 'ENG1222', 'Note taking skill-Short Note', 4.0),
('TG1010', 'ICT1233', 'Mini Project', 11.5),
('TG1010', 'ICT1233', 'Tutorial Submission', 3.8),
('TG1010', 'ICT1242', 'Assignment', 8.5),
('TG1010', 'ICT1253', 'In class test-Theory', 8.0),
('TG1010', 'ICT1253', 'In class test-Practical', 9.0),
('TG1010', 'TCS1212', 'Case study CSR of choosen company', 7.5),
('TG1010', 'TMS1233', 'Tutorial / Assignment Submission', 4.0);


View for TOTAL assessment marks

CREATE VIEW tot_assessment_marks AS
SELECT reg_no, course_code, SUM(assessment_marks) AS total_assessment_marks
FROM assessment_marks
GROUP BY reg_no, course_code;

VIEW for TOTAL ca marks

CREATE VIEW ca_marks AS
SELECT
    Q.reg_no,
    Q.course_code,
    COALESCE(Q.total_quiz_marks, 0) + COALESCE(A.total_assessment_marks, 0) + COALESCE(M.total_mid_marks, 0) AS ca_marks
FROM tot_quiz_marks Q
LEFT JOIN tot_assessment_marks A ON Q.reg_no = A.reg_no AND Q.course_code = A.course_code
LEFT JOIN (
    SELECT reg_no, course_code, COALESCE(SUM(Practical), 0) + COALESCE(SUM(Theory), 0) AS total_mid_marks
    FROM mid_marks
    GROUP BY reg_no, course_code
) M ON Q.reg_no = M.reg_no AND Q.course_code = M.course_code;


VIEW for CA pass status

CREATE VIEW ca_pass_status AS
SELECT
    cmv.reg_no,
    cmv.course_code,
    cmv.ca_marks,
    CASE
        WHEN cmv.ca_marks >=
            CASE
                WHEN cmv.course_code = 'ENG1222' THEN 40
                WHEN cmv.course_code = 'ICT1212' THEN 30
                WHEN cmv.course_code = 'ICT1222' THEN 40
                WHEN cmv.course_code = 'ICT1233' THEN 40
                WHEN cmv.course_code = 'ICT1242' THEN 40
                WHEN cmv.course_code = 'ICT1253' THEN 30
                WHEN cmv.course_code = 'TCS1212' THEN 40
                WHEN cmv.course_code = 'TMS1233' THEN 40
                ELSE 0
            END * 0.5 THEN 'Pass'
        ELSE 'Fail'
    END AS pass_status
FROM ca_marks cmv;

CA marks for whole batch giving course_code
DELIMITER //
CREATE PROCEDURE GetCAMarksSummaryGivingcourse_code(IN courseCode CHAR(7))
BEGIN
    SELECT
        cps.reg_no,
        cps.course_code,
        cps.ca_marks,
        cps.pass_status
    FROM ca_pass_status cps
    WHERE cps.course_code = courseCode;
END;
//
DELIMITER ;

ca_marks giving course_code and reg_no
DELIMITER //
CREATE PROCEDURE GetCAMarksSummaryGivingcourse_codewithReg_no(IN courseCode CHAR(7), IN regNo CHAR(6))
BEGIN
    SELECT
        cps.reg_no,
        cps.course_code,
        cps.ca_marks,
        cps.pass_status
    FROM ca_pass_status cps
    WHERE cps.course_code = courseCode AND cps.reg_no = regNo;
END;
//
DELIMITER ;

CA marks details specific student

DELIMITER //
CREATE PROCEDURE GetCAMarksSummaryByRegNo(IN regNo CHAR(6))
BEGIN
    SELECT
        cps.course_code,
        cps.ca_marks,
        cps.pass_status
    FROM ca_pass_status cps
    WHERE cps.reg_no = regNo;
END;
//
DELIMITER ;

FINAL EXAM sit eligibility check whole batch by giving course code

DELIMITER //
CREATE PROCEDURE CheckBatchEligibility(IN courseCode CHAR(7))
BEGIN
    SELECT
        cp.reg_no AS Registration_Number,
        CASE
            WHEN (
                cp.ca_marks >= 50.00 AND ap.attendance_percentage >= 0.80
            ) THEN 'Eligible'
            ELSE 'Not Eligible'
        END AS Eligibility_Status
    FROM ca_pass_status cp
    JOIN student_attendance_percentage1 ap ON cp.reg_no = ap.reg_no
    WHERE cp.course_code = courseCode;
END;
//
DELIMITER ;

Giving student regno and course_unit eligibility sit for the final exam

DELIMITER //
CREATE PROCEDURE CheckStudentEligibility(IN in_regno CHAR(6))
BEGIN
    SELECT
        cp.course_code AS Course_Code,
        CASE
            WHEN (
                cp.ca_marks >= 50.00 AND ap.attendance_percentage >= 0.80
            ) THEN 'Eligible'
            ELSE 'Not Eligible'
        END AS Eligibility_Status
    FROM ca_pass_status cp
    JOIN student_attendance_percentage1 ap ON cp.reg_no = ap.reg_no
    WHERE cp.reg_no = in_regno;
END;
//
DELIMITER ;




*****************************************************************************************************************************

Add data staff

mysql> INSERT INTO staff(staff_id,fname,lname,designation,dep_name,email,start_work_date,phone_no) VALUES
    -> (1010,'Subash','Jayasinghe','Dean','ICT','subash@fot.ruh.ac.lk','2016-01-01','075*******'),
    -> (1011,'Nuwan','Laksiri','lecturer','ICT','phpnlaksiri@ictec.ruh.ac.lk','2016-01-01','075*******'),
    -> (1012,'Chanduni','Gamage','Lecturer','ICT','chanduni@ictec.ruh.ac.lk','2017-01-01','075*******'),
    -> (1013,'Harshana','Senevirathna','Lecturer','ET','harshana@etec.ruh.ac.lk','2017-06-01','075*******'),
    -> (1014,'Sanjeewani','Thilakarathna','Lecturer','ET','sanjeewani@etec.ruh.ac.lk','2018-06-01','075*******'),
    -> (1015,'Malsha','Prabuddhi','Lecturer','ICT','malsha@fot.ruh.ac.lk','2018-01-01','075*******'),
    -> (1016,'Ruwan','Kumara','Assistant','NA','ruwankumara@gmail.com','2016-01-01','075*******'),
    -> (1017,'Uthpala','Kumanayaka','System Administrator','NA','uthpala@fot.ruh.ac.lk','2016-01-01','075*******'),
    -> (1018,'Hiruni','Nethmini','Assistant','NA','hirunisathsarani@gmail.com','2017-01-01','075*******'),
    -> (1019,'Ruwan','Darshana','Assistant','NA','ruwandarshana@gmail.com','2018-08-01','075*******'),
    -> (1020,'pasindu','dilshan','Assistant','NA','pasindu@gmail.com','2020-09-01','075*******');
Query OK, 11 rows affected (0.03 sec)
Records: 11  Duplicates: 0  Warnings: 0

