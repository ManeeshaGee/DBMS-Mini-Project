********************************** 
Total quiz marks calculation VIEW
********************************** 

CREATE VIEW tot_quiz_marks AS
SELECT
    reg_no,
    course_code,
    CAST(
        CASE
            WHEN COUNT(*) = 3 THEN (SUM(quiz_score) - MIN(quiz_score)) / 2
            WHEN COUNT(*) = 4 THEN (SUM(quiz_score) - MIN(quiz_score)) / 2
            ELSE SUM(quiz_score) / 2
        END AS DECIMAL(3, 2)
    ) AS total_quiz_marks
FROM quiz_marks
GROUP BY reg_no, course_code;

********************************** 
View for TOTAL assessment marks
********************************** 

CREATE VIEW tot_assessment_marks AS
SELECT reg_no, course_code, SUM(assessment_marks) AS total_assessment_marks
FROM assessment_marks
GROUP BY reg_no, course_code;

********************************** 
VIEW for CA pass status
********************************** 

CREATE VIEW ca_pass_status AS
SELECT
    cmv.reg_no,
    cmv.course_code,
    cmv.ca_marks,
    CASE
        WHEN cmv.ca_marks >=
            CASE
                WHEN cmv.course_code = 'ENG1222' THEN 40
                WHEN cmv.course_code = 'ICT1212' THEN 30
                WHEN cmv.course_code = 'ICT1222' THEN 40
                WHEN cmv.course_code = 'ICT1233' THEN 40
                WHEN cmv.course_code = 'ICT1242' THEN 40
                WHEN cmv.course_code = 'ICT1253' THEN 30
                WHEN cmv.course_code = 'TCS1212' THEN 40
                WHEN cmv.course_code = 'TMS1233' THEN 40
                ELSE 0
            END * 0.5 THEN 'Pass'
        ELSE 'Fail'
    END AS pass_status
FROM ca_marks cmv;

***************************************************************
CA marks for whole batch giving course_code (with pass status)
***************************************************************

DELIMITER //
CREATE PROCEDURE GetCAMarksSummaryGivingcourse_code(IN courseCode CHAR(7))
BEGIN
    SELECT
        cps.reg_no,
        cps.course_code,
        cps.ca_marks,
        cps.pass_status
    FROM ca_pass_status cps
    WHERE cps.course_code = courseCode;
END;
//
DELIMITER ;

****************************************************************************
ca_marks giving course_code and reg_no (with pass status-specific student)
****************************************************************************

DELIMITER //
CREATE PROCEDURE GetCAMarksSummaryGivingcourse_codewithReg_no(IN courseCode CHAR(7), IN regNo CHAR(6))
BEGIN
    SELECT
        cps.reg_no,
        cps.course_code,
        cps.ca_marks,
        cps.pass_status
    FROM ca_pass_status cps
    WHERE cps.course_code = courseCode AND cps.reg_no = regNo;
END;
//
DELIMITER ;

****************************************************************************
CA marks details specific student (Summary all course units with pass status)
****************************************************************************


DELIMITER //
CREATE PROCEDURE GetCAMarksSummaryByRegNo(IN regNo CHAR(6))
BEGIN
    SELECT
        cps.course_code,
        cps.ca_marks,
        cps.pass_status
    FROM ca_pass_status cps
    WHERE cps.reg_no = regNo;
END;
//
DELIMITER ;

*******************************************************************
FINAL EXAM sit eligibility check whole batch by giving course code (CA eligibility)
*******************************************************************

DELIMITER //

CREATE PROCEDURE CheckBatchEligibility(IN courseCode CHAR(7))
BEGIN
    SELECT DISTINCT
        cp.reg_no AS Registration_Number,
        CASE
            WHEN (
                cp.ca_marks >= 50.00 AND ap.attendance_percentage >= 0.80
            ) THEN 'Eligible'
            ELSE 'Not Eligible'
        END AS Eligibility_Status
    FROM ca_pass_status cp
    JOIN student_attendance_percentage ap ON cp.reg_no = ap.reg_no
    WHERE cp.course_code = courseCode;
END;
//

DELIMITER ;

**************************************************************************
Giving student regno and course_unit eligibility sit for the final exam (as individuals)
**************************************************************************

DELIMITER //
CREATE PROCEDURE CheckStudentEligibility22(IN in_regno CHAR(6))
BEGIN
    SELECT DISTINCT
        cp.course_code AS Course_Code,
        CASE
            WHEN (
                cp.ca_marks >= 50.00 AND ap.attendance_percentage >= 0.80
            ) THEN 'Eligible'
            ELSE 'Not Eligible'
        END AS Eligibility_Status
    FROM ca_pass_status cp
    JOIN student_attendance_percentage ap ON cp.reg_no = ap.reg_no
    WHERE cp.reg_no = in_regno;
END;
//
DELIMITER ;